const request = require('request');
const keys = require('./keys');

function getMethods() {
    let card = {
        bin: "450995"
    }

    return new Promise(function (resolve, reject) {
        request.get(`https://api.mercadopago.com/v1/payment_methods?public_key=${keys.publicKey}`, {
            json: card
        }, (error, res, body) => {
            if (error) {
                console.log(error)
                reject(error);
                return
            }
            resolve(body);
        })
    });
}

getMethods().then((body) => {
    console.log(`Methods ===> ${JSON.stringify(body)}`);
});


var response_example = [{ "id": "visa", "name": "Visa", "payment_type_id": "credit_card", "status": "active", "secure_thumbnail": "https://www.mercadopago.com/org-img/MP3/API/logos/visa.gif", "thumbnail": "http://img.mlstatic.com/org-img/MP3/API/logos/visa.gif", "deferred_capture": "supported", "settings": [{ "card_number": { "validation": "standard", "length": 16 }, "bin": { "pattern": "^(4)", "installments_pattern": "^(?!(453998|426398|462437|451212|456188))", "exclusion_pattern": "^((451416)|(438935)|(40117[8-9])|(45763[1-2])|(457393)|(431274))" }, "security_code": { "length": 3, "card_location": "back", "mode": "mandatory" } }], "additional_info_needed": ["cardholder_name", "cardholder_identification_type", "cardholder_identification_number"], "min_allowed_amount": 0.5, "max_allowed_amount": 50000, "accreditation_time": 2880, "financial_institutions": [], "processing_modes": ["aggregator"] }, { "id": "master", "name": "Mastercard", "payment_type_id": "credit_card", "status": "active", "secure_thumbnail": "https://www.mercadopago.com/org-img/MP3/API/logos/master.gif", "thumbnail": "http://img.mlstatic.com/org-img/MP3/API/logos/master.gif", "deferred_capture": "supported", "settings": [{ "card_number": { "validation": "standard", "length": 16 }, "bin": { "pattern": "^(5|(2(221|222|223|224|225|226|227|228|229|23|24|25|26|27|28|29|3|4|5|6|70|71|720)))", "installments_pattern": "^(?!(525823|525824|525834|527660|529133|529205|536390|513368|539131|529053|538450|538455|515675|549636|524886|546616|529115|511623|521580|527308|527648|528841|530551|533728|534300|539181|549622|528590|542865|538454|543299|545377))", "exclusion_pattern": "^((50670[7-8])|(506715)|(50671[7-9])|(50672[0-1])|(50672[4-9])|(50673[0-3])|(506739)|(50674[0-8])|(50675[0-3])|(50677[4-8])|(50900[0-9])|(50901[3-9])|(50902[0-9])|(50903[1-5])|(50903[8-9])|(50904[0-9])|(50905[0-9])|(50906[0-4])|(50906[6-9])|(50907[0-2])|(50907[4-5])|(504175)|(50907[6-9])|(50908[0-9])|(509[0-7][0-9]{2})|(509[8]0[0-9])|(532884)|509810)" }, "security_code": { "length": 3, "card_location": "back", "mode": "mandatory" } }, { "card_number": { "validation": "standard", "length": 19 }, "bin": { "pattern": "^((532884))", "installments_pattern": null, "exclusion_pattern": null }, "security_code": { "length": 3, "card_location": "back", "mode": "mandatory" } }], "additional_info_needed": ["cardholder_identification_type", "cardholder_name", "cardholder_identification_number"], "min_allowed_amount": 0.5, "max_allowed_amount": 50000, "accreditation_time": 2880, "financial_institutions": [], "processing_modes": ["aggregator"] }, { "id": "hipercard", "name": "Hipercard", "payment_type_id": "credit_card", "status": "active", "secure_thumbnail": "https://www.mercadopago.com/org-img/MP3/API/logos/hipercard.gif", "thumbnail": "http://img.mlstatic.com/org-img/MP3/API/logos/hipercard.gif", "deferred_capture": "supported", "settings": [{ "card_number": { "validation": "standard", "length": 16 }, "bin": { "pattern": "^((606282)|(637095)|(637568)|(637599)|(637609)|(637612))", "installments_pattern": "^((606282)|(637095)|(637568)|(637599)|(637609)|(637612))", "exclusion_pattern": null }, "security_code": { "length": 3, "card_location": "back", "mode": "mandatory" } }], "additional_info_needed": ["cardholder_identification_type", "cardholder_identification_number", "cardholder_name"], "min_allowed_amount": 0.5, "max_allowed_amount": 50000, "accreditation_time": 2880, "financial_institutions": [], "processing_modes": ["aggregator"] }, { "id": "amex", "name": "American Express", "payment_type_id": "credit_card", "status": "active", "secure_thumbnail": "https://www.mercadopago.com/org-img/MP3/API/logos/amex.gif", "thumbnail": "http://img.mlstatic.com/org-img/MP3/API/logos/amex.gif", "deferred_capture": "supported", "settings": [{ "card_number": { "validation": "standard", "length": 15 }, "bin": { "pattern": "^((34)|(37))", "installments_pattern": "^((374728)|(374769)|(375365)|(374731)|(374758)|(37513[0-9])|(37517[7-9])|(375180)|(37642[0-9])|(376430)|(37644[0-9])|(37646[1-7])|(37647[0-9])|(37648[0-9])|(37649[1-4])|(376498)|(376520)|(3765[40-99])|(376600)|(376603)|(376605)|(376610)|(37661[2-4])|(37661[6-9])|(376619)|(37662[0-9])|(377169)|(377174)|(37996[6-8]))", "exclusion_pattern": "^((384100)|(384140)|(384160))" }, "security_code": { "length": 4, "card_location": "front", "mode": "mandatory" } }], "additional_info_needed": ["cardholder_identification_type", "cardholder_identification_number", "cardholder_name"], "min_allowed_amount": 0.5, "max_allowed_amount": 50000, "accreditation_time": 2880, "financial_institutions": [], "processing_modes": ["aggregator"] }, { "id": "elo", "name": "Elo", "payment_type_id": "credit_card", "status": "active", "secure_thumbnail": "https://www.mercadopago.com/org-img/MP3/API/logos/elo.gif", "thumbnail": "http://img.mlstatic.com/org-img/MP3/API/logos/elo.gif", "deferred_capture": "supported", "settings": [{ "card_number": { "validation": "standard", "length": 16 }, "bin": { "pattern": "^((50670[7-8])|506715|(50671[8-9])|(50672[0-1])|(50672[4-9])|(50673[0-3])|506739|(50674[1-3])|(50674[5-7])|506753|(50677[4-8])|(50900[0-2])|(50900[4-7])|509009|(50901[0-2])|509014|(50902[0-9])|509030|(50903[5-9])|(50904[0-2])|(50904[4-9])|(50905[0-9])|(50906[0-4])|(50906[6-9])|(50907[0-2])|(50907[4-9])|(50908[0-9])|(50909[1-2])|(50909[5-9])|(50910[0-1])|(50910[6-9])|(50911[0-9])|(50912[0-9])|(50913[0-9])|(50914[0-9])|(50915[0-9])|(50916[0-9])|(50917[0-9])|(50918[0-9])|(50919[0-9])|(50920[0-9])|(50921[0-9])|(50922[0-9])|(50923[0-9])|(50924[0-9])|(50925[0-9])|(50926[0-9])|(50927[0-9])|(50928[0-9])|(50929[0-9])|(50930[0-9])|(50931[0-9])|(50932[0-9])|(50933[0-9])|(50934[0-9])|(50935[0-9])|(50936[0-9])|(50937[0-9])|(50938[0-9])|(50939[0-9])|(50940[0-9])|(50941[0-9])|(50942[0-9])|(50943[0-9])|(50944[0-9])|(50945[0-9])|(50946[0-9])|(50947[0-9])|(50948[0-9])|(50949[0-9])|(50950[0-9])|(50951[0-9])|(50952[0-9])|(50953[0-9])|(50954[0-9])|(50955[0-9])|(50956[0-9])|(50957[0-9])|(50958[0-9])|(50959[0-9])|(50960[0-9])|(50961[0-9])|(50962[0-9])|(50963[0-9])|(50964[0-9])|(50965[0-9])|(50966[0-9])|(50967[0-9])|(50968[0-9])|(50969[0-9])|(50970[0-9])|(50971[0-9])|(50972[0-9])|(50973[0-9])|(50974[0-9])|(50975[0-9])|(50976[0-9])|(50977[0-9])|(50978[0-9])|(50979[0-9])|(50980[0-7])|(50983[1-9])|(50984[0-9])|(50985[0-9])|(50986[0-9])|(50987[0-7])|(50989[7-9])|509900|(50991[8-9])|(50992[0-9])|(50993[0-9])|(50994[0-9])|(50995[0-9])|(50996[0-4])|(50997[1-9])|(50998[0-6])|(50999[5-9])|636368|(65040[6-9])|(65041[0-9])|(65042[0-9])|(65043[0-9])|(65048[5-9])|(65049[0-9])|(65050[0-4])|(65050[6-9])|(65051[0-9])|(65052[0-9])|(65053[0-8])|(65055[2-9])|(65056[0-9])|(65057[0-9])|(65058[0-9])|(65059[0-8])|(65072[0-7])|(65090[1-9])|(65091[0-9])|(65092[0-2])|650928|650939|(65094[6-9])|(65095[0-9])|(65096[0-9])|(65097[0-8])|(65165[2-9])|(65166[0-9])|(65167[0-9])|(65168[0-9])|(65169[0-9])|(65170[0-4])|(65500[0-9])|(65501[0-9])|(65502[1-9])|(65503[0-9])|(65504[0-9])|(65505[0-7]))", "installments_pattern": "^(506718|(50672[0-1])|(50672[4-9])|(50673[0-3])|506739|(50674[1-3])|(50674[5-7])|506753|(50677[4-5])|(50677[7-8])|(50900[0-2])|(50900[4-7])|509009|509014|(50902[0-9])|509030|(50903[5-9])|(50904[0-2])|(50904[4-9])|(50905[0-3])|509064|(50906[6-9])|509072|(50907[4-9])|(50908[0-3])|(50908[5-6])|(50909[1-2])|(50909[5-9])|(50910[0-1])|(50910[7-9])|(50911[0-9])|(50912[0-9])|(50913[0-9])|(50914[0-9])|(50915[0-9])|(50916[0-9])|(50917[0-9])|(50918[0-9])|(50919[0-9])|(50920[0-9])|(50921[0-9])|(50922[0-9])|(50923[0-9])|(50924[0-9])|(50925[0-6])|(50950[7-9])|(50951[0-9])|(50952[0-9])|(50953[0-9])|(50954[0-9])|(50955[0-9])|(50956[0-9])|(50957[0-9])|(50958[0-9])|(50959[0-9])|(50960[0-9])|(50961[0-9])|(50962[0-9])|(50963[0-9])|(50964[0-9])|(50965[0-9])|(50966[0-9])|(50967[0-9])|(50968[0-9])|(50969[0-9])|(50970[0-9])|(50971[0-9])|(50972[0-9])|(50973[0-9])|(50974[0-9])|(50975[0-9])|(50976[0-9])|(50977[0-9])|(50978[0-9])|(50979[0-9])|(50980[0-7])|636368|(65048[5-9])|(65049[0-9])|(65050[0-4])|(65050[6-9])|(65051[0-3])|650516|(65051[8-9])|(65052[0-9])|(65053[0-8])|(65055[2-9])|(65056[0-9])|(65057[0-9])|(65058[0-9])|(65059[0-8])|(65072[0-7])|(65090[1-9])|(65091[0-9])|(65092[0-2])|650928|650939|(65094[6-9])|(65095[0-9])|(65096[0-9])|(65097[0-8])|(65165[2-9])|(65166[0-9])|(65167[0-9])|(65168[0-9])|(65169[0-9])|(65170[0-4])|(65500[0-9])|(65501[0-9])|(65502[1-9])|(65503[0-9])|(65504[0-9])|(65505[0-7]))", "exclusion_pattern": null }, "security_code": { "length": 3, "card_location": "back", "mode": "mandatory" } }], "additional_info_needed": ["cardholder_identification_number", "cardholder_identification_type", "cardholder_name"], "min_allowed_amount": 0.5, "max_allowed_amount": 50000, "accreditation_time": 2880, "financial_institutions": [], "processing_modes": ["aggregator"] }, { "id": "pec", "name": "Pagamento na lot√©rica sem boleto", "payment_type_id": "ticket", "status": "active", "secure_thumbnail": "https://www.mercadopago.com/org-img/MP3/API/logos/pec.gif", "thumbnail": "https://www.mercadopago.com/org-img/MP3/API/logos/pec.gif", "deferred_capture": "supported", "settings": [], "additional_info_needed": ["identification_type", "identification_number", "first_name", "last_name"], "min_allowed_amount": 4, "max_allowed_amount": 2000, "accreditation_time": 60, "financial_institutions": [], "processing_modes": ["aggregator"] }, { "id": "bolbradesco", "name": "Boleto", "payment_type_id": "ticket", "status": "active", "secure_thumbnail": "https://www.mercadopago.com/org-img/MP3/API/logos/bolbradesco.gif", "thumbnail": "http://img.mlstatic.com/org-img/MP3/API/logos/bolbradesco.gif", "deferred_capture": "does_not_apply", "settings": [], "additional_info_needed": ["identification_type", "identification_number", "first_name", "last_name"], "min_allowed_amount": 4, "max_allowed_amount": 15000, "accreditation_time": 1440, "financial_institutions": [], "processing_modes": ["aggregator"] }]